Parser Brainstorming
====================

The parser's job, is to "check the token list for certain 'patterns'".

Example patterns: (`...` denotes an area where multiple token types can be used)
 - Variable Declaration:
    <keyword> <identifier> <operator> ... <terminator>

 - Function Declaration:
    <keyword> <identifier> <leftparen> ... <rightparen> <leftbrace>
        ...
    <rightbrace>

 - Function Invocation:
    <identifier> <leftparen> ... <rightparen> <terminator>

Ideas:
 - Keep track of each of the tokens we've run through, and submit them to methods that'll check if they match a certain pattern.
  - If they do, then add the corresponding AST node to the AST.
  - If they don't, log an error message and move on.
